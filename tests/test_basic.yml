openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /albums/:
    get:
      operationId: albums_list
      description: ''
      tags:
      - albums
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
          description: ''
    post:
      operationId: albums_create
      description: |-
        Special documentation about creating albums

        There is even more info here
      tags:
      - albums
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Album'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Album'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
  /albums/{id}/:
    get:
      operationId: albums_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this album.
        required: true
      tags:
      - albums
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    put:
      operationId: albums_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this album.
        required: true
      tags:
      - albums
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Album'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Album'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    patch:
      operationId: albums_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this album.
        required: true
      tags:
      - albums
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    delete:
      operationId: albums_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this album.
        required: true
      tags:
      - albums
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /albums/{id}/like/:
    post:
      operationId: albums_like_create
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this album.
        required: true
      tags:
      - albums
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    Album:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          title: Id
        songs:
          type: array
          items:
            $ref: '#/components/schemas/Song'
          readOnly: true
          title: Songs
        single:
          allOf:
          - $ref: '#/components/schemas/Song'
          readOnly: true
          title: Single
        title:
          type: string
          title: Title
          maxLength: 100
        genre:
          allOf:
          - $ref: '#/components/schemas/GenreEnum'
          title: Genre
        year:
          type: integer
          title: Year
        released:
          type: boolean
          title: Released
      required:
      - genre
      - id
      - released
      - single
      - songs
      - title
      - year
    GenreEnum:
      enum:
      - POP
      - ROCK
      type: string
    PatchedAlbum:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          title: Id
        songs:
          type: array
          items:
            $ref: '#/components/schemas/Song'
          readOnly: true
          title: Songs
        single:
          allOf:
          - $ref: '#/components/schemas/Song'
          readOnly: true
          title: Single
        title:
          type: string
          title: Title
          maxLength: 100
        genre:
          allOf:
          - $ref: '#/components/schemas/GenreEnum'
          title: Genre
        year:
          type: integer
          title: Year
        released:
          type: boolean
          title: Released
    Song:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          title: Id
        title:
          type: string
          title: Title
          maxLength: 100
        length:
          type: integer
          title: Length
        top10:
          type: boolean
          nullable: true
          readOnly: true
          title: Top10
      required:
      - id
      - length
      - title
      - top10
  securitySchemes:
    tokenAuth:
      type: http
      scheme: bearer
      bearerFormat: Token
